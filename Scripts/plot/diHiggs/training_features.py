import pandas as pd

hdf_signal = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/eval/HHbbWW129847_train.calibrated.h5')
hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/eval/ttbar145013_train.calibrated.h5')

import matplotlib.pyplot as plt
import numpy as np

fig_l_px = plt.figure(1)
l_px_signal = hdf_signal.eval('l_px')
l_px_ttbar = hdf_ttbar.eval('l_px')
plt.hist(l_px_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(l_px_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\ell x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_px.savefig('l_px.pdf')

fig_l_py = plt.figure(2)
l_py_signal = hdf_signal.eval('l_py')
l_py_ttbar = hdf_ttbar.eval('l_py')
plt.hist(l_py_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(l_py_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\ell y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_py.savefig('l_py.pdf')

fig_l_pz = plt.figure(3)
l_pz_signal = hdf_signal.eval('l_pz')
l_pz_ttbar = hdf_ttbar.eval('l_pz')
plt.hist(l_pz_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(l_pz_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\ell z}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_pz.savefig('l_pz.pdf')

fig_l_E = plt.figure(4)
l_E_signal = hdf_signal.eval('l_E')
l_E_ttbar = hdf_ttbar.eval('l_E')
plt.hist(l_E_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(l_E_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$E_{\ell}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_E.savefig('l_E.pdf')

fig_v_l_px = plt.figure(5)
v_l_px_signal = hdf_signal.eval('v_l_px')
v_l_px_ttbar = hdf_ttbar.eval('v_l_px')
plt.hist(v_l_px_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(v_l_px_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\\nu x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_v_l_px.savefig('v_l_px.pdf')

fig_v_l_py = plt.figure(6)
v_l_py_signal = hdf_signal.eval('v_l_py')
v_l_py_ttbar = hdf_ttbar.eval('v_l_py')
plt.hist(v_l_py_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(v_l_py_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\\nu y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_v_l_py.savefig('v_l_py.pdf')

fig_q_fin_px1 = plt.figure(7)
q_fin_px1_signal = hdf_signal.eval('q_fin_px1')
q_fin_px1_ttbar = hdf_ttbar.eval('q_fin_px1')
plt.hist(q_fin_px1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_px1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q1 x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_px1.savefig('q_fin_px1.pdf')

fig_q_fin_px2 = plt.figure(8)
q_fin_px2_signal = hdf_signal.eval('q_fin_px2')
q_fin_px2_ttbar = hdf_ttbar.eval('q_fin_px2')
plt.hist(q_fin_px2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_px2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q2 x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_px2.savefig('q_fin_px2.pdf')

fig_q_fin_py1 = plt.figure(9)
q_fin_py1_signal = hdf_signal.eval('q_fin_py1')
q_fin_py1_ttbar = hdf_ttbar.eval('q_fin_py1')
plt.hist(q_fin_py1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_py1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q1 y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_py1.savefig('q_fin_py1.pdf')

fig_q_fin_py2 = plt.figure(10)
q_fin_py2_signal = hdf_signal.eval('q_fin_py2')
q_fin_py2_ttbar = hdf_ttbar.eval('q_fin_py2')
plt.hist(q_fin_py2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_py2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q2 y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_py2.savefig('q_fin_py2.pdf')

fig_q_fin_pz1 = plt.figure(11)
q_fin_pz1_signal = hdf_signal.eval('q_fin_pz1')
q_fin_pz1_ttbar = hdf_ttbar.eval('q_fin_pz1')
plt.hist(q_fin_pz1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_pz1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q1 z}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_pz1.savefig('q_fin_pz1.pdf')

fig_q_fin_pz2 = plt.figure(12)
q_fin_pz2_signal = hdf_signal.eval('q_fin_pz2')
q_fin_pz2_ttbar = hdf_ttbar.eval('q_fin_pz2')
plt.hist(q_fin_pz2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_pz2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{q2 z}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_pz2.savefig('q_fin_pz2.pdf')

fig_q_fin_E1 = plt.figure(13)
q_fin_E1_signal = hdf_signal.eval('q_fin_E1')
q_fin_E1_ttbar = hdf_ttbar.eval('q_fin_E1')
plt.hist(q_fin_E1_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_E1_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$E_{q1}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_E1.savefig('q_fin_E1.pdf')

fig_q_fin_E2 = plt.figure(14)
q_fin_E2_signal = hdf_signal.eval('q_fin_E2')
q_fin_E2_ttbar = hdf_ttbar.eval('q_fin_E2')
plt.hist(q_fin_E2_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(q_fin_E2_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$E_{q2}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_q_fin_E2.savefig('q_fin_E2.pdf')

fig_b_fin_px1 = plt.figure(15)
b_fin_px1_signal = hdf_signal.eval('b_fin_px1')
b_fin_px1_ttbar = hdf_ttbar.eval('b_fin_px1')
plt.hist(b_fin_px1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_px1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b1 x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_px1.savefig('b_fin_px1.pdf')

fig_b_fin_px2 = plt.figure(16)
b_fin_px2_signal = hdf_signal.eval('b_fin_px2')
b_fin_px2_ttbar = hdf_ttbar.eval('b_fin_px2')
plt.hist(b_fin_px2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_px2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b2 x}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_px2.savefig('b_fin_px2.pdf')

fig_b_fin_py1 = plt.figure(17)
b_fin_py1_signal = hdf_signal.eval('b_fin_py1')
b_fin_py1_ttbar = hdf_ttbar.eval('b_fin_py1')
plt.hist(b_fin_py1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_py1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b1 y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_py1.savefig('b_fin_py1.pdf')

fig_b_fin_py2 = plt.figure(18)
b_fin_py2_signal = hdf_signal.eval('b_fin_py2')
b_fin_py2_ttbar = hdf_ttbar.eval('b_fin_py2')
plt.hist(b_fin_py2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_py2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b2 y}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_py2.savefig('b_fin_py2.pdf')

fig_b_fin_pz1 = plt.figure(19)
b_fin_pz1_signal = hdf_signal.eval('b_fin_pz1')
b_fin_pz1_ttbar = hdf_ttbar.eval('b_fin_pz1')
plt.hist(b_fin_pz1_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_pz1_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b1 z}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_pz1.savefig('b_fin_pz1.pdf')

fig_b_fin_pz2 = plt.figure(20)
b_fin_pz2_signal = hdf_signal.eval('b_fin_pz2')
b_fin_pz2_ttbar = hdf_ttbar.eval('b_fin_pz2')
plt.hist(b_fin_pz2_signal,np.arange(-300,300,6), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_pz2_ttbar,np.arange(-300,300,6), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{b2 z}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_pz2.savefig('b_fin_pz2.pdf')

fig_b_fin_E1 = plt.figure(21)
b_fin_E1_signal = hdf_signal.eval('b_fin_E1')
b_fin_E1_ttbar = hdf_ttbar.eval('b_fin_E1')
plt.hist(b_fin_E1_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_E1_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$E_{b1}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_E1.savefig('b_fin_E1.pdf')

fig_b_fin_E2 = plt.figure(22)
b_fin_E2_signal = hdf_signal.eval('b_fin_E2')
b_fin_E2_ttbar = hdf_ttbar.eval('b_fin_E2')
plt.hist(b_fin_E2_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(b_fin_E2_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$E_{b2}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_b_fin_E2.savefig('b_fin_E2.pdf')

fig_l_pt = plt.figure(23)
l_pt_signal = hdf_signal.eval('l_pt')
l_pt_ttbar = hdf_ttbar.eval('l_pt')
plt.hist(l_pt_signal,np.arange(0,300,3), alpha=0.5, label='signal', density=True)
plt.hist(l_pt_ttbar,np.arange(0,300,3), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\ell T}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_pt.savefig('l_pt.pdf')

fig_l_eta = plt.figure(24)
l_eta_signal = hdf_signal.eval('l_eta')
l_eta_ttbar = hdf_ttbar.eval('l_eta')
plt.hist(l_eta_signal,np.arange(-5,5,0.1), alpha=0.5, label='signal', density=True)
plt.hist(l_eta_ttbar,np.arange(-5,5,0.1), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$\eta_{\ell}$')
plt.ylabel('Normalized distribution')
fig_l_eta.savefig('l_eta.pdf')

fig_l_phi = plt.figure(25)
l_phi_signal = hdf_signal.eval('l_phi')
l_phi_ttbar = hdf_ttbar.eval('l_phi')
plt.hist(l_phi_signal,np.arange(-4,4,0.1), alpha=0.5, label='signal', density=True)
plt.hist(l_phi_ttbar,np.arange(-4,4,0.1), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{\ell \\varphi}$ [GeV]')
plt.ylabel('Normalized distribution')
fig_l_phi.savefig('l_phi.pdf')