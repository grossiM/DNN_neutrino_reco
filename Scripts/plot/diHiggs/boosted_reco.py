import pandas as pd
# hdf_signal = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_neu60hid4/HHbbWW83904_eval.calibrated.h5')
# hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/ttbar_neu60hid4/ttbar145013_train.calibrated.h5')
# hdf_signal = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/signal_noeventmass/HHbbWW83904_eval.calibrated.h5')
# hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/ttbar_noeventmass/ttbar145013_train.calibrated.h5')
# hdf_signal = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_noeventmass_reco/signal.calibrated.h5')
# hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_noeventmass_reco/ttbar.calibrated.h5')
# hdf_signal = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_valerio_r2/signal_valerio_eval.calibrated.h5')
# hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_valerio_r2/ttbar.calibrated.h5')
hdf_signal_reco = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_2TeV/reco_2TeV_eval.calibrated.h5')
hdf_ttbar = pd.read_hdf('/afs/f9.ijs.si/home/jakobn/DNN-plots/HHbbWW_1lep/ttbar.calibrated.h5')

higgs_mass_truenu = hdf_signal_reco.eval('sqrt((TrueWhadE + LepE + sqrt((TrueNeutrinoPz)**2 + MetPx**2 + MetPy**2))**2 - (TrueWhadPx + LepPx + MetPx)**2 - (TrueWhadPy + LepPy + MetPy)**2 - (TrueWhadPz + LepPz + TrueNeutrinoPz)**2)')
higgs_mass_truew = hdf_signal_reco.eval('sqrt((TrueWhadE + LepE + sqrt((hid4neu60_pred)**2 + MetPx**2 + MetPy**2))**2 - (TrueWhadPx + LepPx + MetPx)**2 - (TrueWhadPy + LepPy + MetPy)**2 - (TrueWhadPz + LepPz + hid4neu60_pred)**2)')
higgs_mass_reco = hdf_signal_reco.eval('sqrt((WhadE + LepE + sqrt((hid4neu60_pred)**2 + MetPx**2 + MetPy**2))**2 - (WhadPx + LepPx + MetPx)**2 - (WhadPy + LepPy + MetPy)**2 - (WhadPz + LepPz + hid4neu60_pred)**2)')
higgs_mass_ttbar = hdf_ttbar.eval('sqrt((Jet1E + Jet2E + LepE + sqrt((hid4neu60_pred)**2 + MET_px**2 + MET_py**2))**2 - (Jet1Px + Jet2Px + LepPx + MET_px)**2 - (Jet1Py + Jet2Py + LepPy + MET_py)**2 - (Jet1Pz + Jet2Pz + LepPz + hid4neu60_pred)**2)')
# higgs_mass_signal = hdf_signal.eval('sqrt((Jet1E + Jet2E + LepE + sqrt((TrueNuPz)**2 + MetPx**2 + MetPy**2))**2 - (Jet1Px + Jet2Px + LepPx + MetPx)**2 - (Jet1Py + Jet2Py + LepPy + MetPy)**2 - (Jet1Pz + Jet2Pz + LepPz + TrueNuPz)**2)')
# higgs_mass_signal = hdf_signal.eval('sqrt((HadWE + LepE + sqrt((TrueNuPz)**2 + MetPx**2 + MetPy**2))**2 - (HadWPx + LepPx + MetPx)**2 - (HadWPy + LepPy + MetPy)**2 - (HadWPz + LepPz + TrueNuPz)**2)')
# higgs_mass_ttbar = hdf_ttbar.eval('sqrt((Jet1E + Jet2E + LepE + sqrt((hid4neu60_pred)**2 + MetPx**2 + MetPy**2))**2 - (Jet1Px + Jet2Px + LepPx + MetPx)**2 - (Jet1Py + Jet2Py + LepPy + MetPy)**2 - (Jet1Pz + Jet2Pz + LepPz + hid4neu60_pred)**2)')
# w_mass_signal = hdf_signal.eval('sqrt((LepE + sqrt((hid4neu60_pred)**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + hid4neu60_pred)**2)')
# w_mass_ttbar = hdf_ttbar.eval('sqrt((LepE + sqrt((hid4neu60_pred)**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + hid4neu60_pred)**2)')
# w_mass_signal = hdf_signal.eval('sqrt((LepE + sqrt((TrueNuPz)**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + TrueNuPz)**2)')
# w_mass_ttbar = hdf_ttbar.eval('sqrt((LepE + sqrt((TrueNuPz)**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + TrueNuPz)**2)')

w_mass_truenu = hdf_signal_reco.eval('sqrt((LepE + sqrt((TrueNeutrinoPz)**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + TrueNeutrinoPz)**2)')
w_mass_reco = hdf_signal_reco.eval('sqrt((LepE + sqrt(hid4neu60_pred**2 + MetPx**2 + MetPy**2))**2 - (LepPx + MetPx)**2 - (LepPy + MetPy)**2 - (LepPz + hid4neu60_pred)**2)')
w_mass_ttbar = hdf_ttbar.eval('sqrt((LepE + sqrt(hid4neu60_pred**2 + MET_px**2 + MET_py**2))**2 - (LepPx + MET_px)**2 - (LepPy + MET_py)**2 - (LepPz + hid4neu60_pred)**2)')
# w_mass_signal = hdf_signal.eval('sqrt((BJet1E + BJet2E)**2 - (BJet1Px + BJet2Px)**2 - (BJet1Py + BJet2Py)**2 - (BJet1Pz + BJet2Pz)**2)')
# w_mass_ttbar = hdf_ttbar.eval('sqrt((BJet1E + BJet2E)**2 - (BJet1Px + BJet2Px)**2 - (BJet1Py + BJet2Py)**2 - (BJet1Pz + BJet2Pz)**2)')
# w_mass_signal = hdf_signal.eval('sqrt((Jet1E + Jet2E)**2 - (Jet1Px + Jet2Px)**2 - (Jet1Py + Jet2Py)**2 - (Jet1Pz + Jet2Pz)**2)')
# w_mass_ttbar = hdf_ttbar.eval('sqrt((Jet1E + Jet2E)**2 - (Jet1Px + Jet2Px)**2 - (Jet1Py + Jet2Py)**2 - (Jet1Pz + Jet2Pz)**2)')

import matplotlib.pyplot as plt
import numpy as np

fig_higgs = plt.figure(1)
# plt.hist(higgs_mass_ttbar,np.arange(0,600,6), label='ttbar', density=True, histtype='step', linewidth=1.5)
plt.hist(higgs_mass_truew,np.arange(0,600,6), color = (1, 0.6, 0), label='signal, true W had', density=True, histtype='step', linewidth=1.5)
plt.hist(higgs_mass_truenu,np.arange(0,600,6), color = 'g', label=r'signal, true W had, $\nu$', density=True, histtype='step', linewidth=1.5)
plt.hist(higgs_mass_reco,np.arange(0,600,6), color = (0.85, 0.15, 0), label='signal', density=True, histtype='step', linewidth=1.5)
plt.legend(loc='upper right', ncol=2, fancybox=True, fontsize='small')
plt.xlabel('$m_{WW}$ [GeV]')
plt.ylabel('Normalized distribution')
plt.title('Boosted 1 lepton, 2 TeV mass point')
fig_higgs.savefig('2TeV_higgs_mass.pdf')

fig_w = plt.figure(2)
plt.hist(w_mass_ttbar,np.arange(0,300,3), label='ttbar', density=True, histtype='step', linewidth=1.5)
plt.hist(w_mass_reco,np.arange(0,300,3), label='signal', density=True, histtype='step', linewidth=1.5)
# plt.hist(w_mass_truenu,np.arange(0,300,3), label=r'signal, true $\nu$', density=True, histtype='step', linewidth=1.5)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$m_W$ [GeV]')
plt.ylabel('Normalized distribution')
plt.title('Reconstructed $m_W$')
fig_w.savefig('2TeV_w_mass.pdf')
'''
abs_signal = hdf_signal.eval('MetPx - TrueNuPx')
abs_ttbar = hdf_ttbar.eval('MetPx - TrueNuPx')
rel_signal = hdf_signal.eval('MetPy - TrueNuPy')
rel_ttbar = hdf_ttbar.eval('MetPy - TrueNuPy')

fig_abs_err = plt.figure(3)
plt.hist(abs_signal,np.arange(-200,200,4), alpha=0.5, label='signal', density=True)
plt.hist(abs_ttbar,np.arange(-200,200,4), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$p_{z \,\,reco} - p_{z \,\,truth}$ [GeV]')
plt.ylabel('Normalized distribution')
plt.title('Absolute error')
fig_abs_err.savefig('abs_error.pdf')

fig_rel_err = plt.figure(4)
plt.hist(rel_signal,np.arange(-200,200,4), alpha=0.5, label='signal', density=True)
plt.hist(rel_ttbar,np.arange(-200,200,4), alpha=0.5, label='ttbar', density=True)
plt.legend(loc='upper right', ncol=3, fancybox=True, fontsize='small')
plt.xlabel('$(p_{z \,\,reco} - p_{z \,\,truth})/p_{z \,\,truth}$')
plt.ylabel('Normalized distribution')
plt.title('Relative error')
plt.show()
fig_rel_err.savefig('rel_error.pdf')
'''