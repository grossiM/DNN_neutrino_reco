##########################################################################################
# ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ---- #
#                                                                                        #
#           template cfg file for the usage of the neural network                        #
#                                                                                        #
#                                                                                        #
# ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ---- #

[output]

output-folder = /output/folder
save-steps= 1

[input]

data-train = /path/to/data/file.h5

data-val = /path/to/data/file.h5

number-of-events = -1

[training]
scale-label = 0
training-variables = mu_px,mu_py,mu_pz,mu_E,q_fin_px1,q_fin_py1,q_fin_pz1,q_fin_E1,q_fin_px2,q_fin_py2,q_fin_pz2,q_fin_E2,mu_pt,mu_eta,mu_phi,el_pt,el_eta,el_phi,pt_vv,pv_xx,pv_yy
training-labels = longitudinal,mixed,transverse

output-dim = 3

model = custom_model
neurons = 20,40,60,100,150
hidden-layers = 2,4,6,8
epochs = 150
batch-size = 128

dropout-rate = 0.0
grid-search = neurons,hidden-layers,batch-size


activation = relu 
last_activation = sigmoid
#learning_rate = 1e-4
loss = categorical_crossentropy
kernel_init = normal
optimizer = adam
metrics = categorical_accuracy

[grid]
unfold = 1

[hardware]
#machine = (local/cluster)

[evaluation]
model-of-interest = current_model_epoch100

output = /where/to/put/evaluated_data
binning =\-1,1,0.04
type = binary
data-eval = /path/to/data/file.h5:/path/to/data/file.h5