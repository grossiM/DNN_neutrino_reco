##########################################################################################
# ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ---- #
#                                                                                        #
#           template cfg file for the usage of the neural network                        #
#                                                                                        #
#                                                                                        #
# ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ----  ---- ---- #
[general]
scale-label = 0

[output]
output-folder = /data_CMS/cms/marchegiani/DNN_first
save-steps= 1

[input]
data-train = /home/llr/cms/marchegiani/dataframes/DNN_zz_polarized/zz_mumuee_polarized_delphes19877_train.h5
data-val = /home/llr/cms/marchegiani/dataframes/DNN_zz_polarized/zz_mumuee_polarized_delphes19877_val.h5

number-of-events = -1

[training]
training-variables = ze_pt,zmu_pt,ze_eta,zmu_eta,ze_phi,zmu_phi,zz_pt,zz_eta,zz_phi,mz1,mz2,m4l,mjj,jj_deta,Theta_e,Theta_mu,e+_pt,e-_pt,e+_eta,e-_eta,e+_phi,e-_phi,mu+_pt,mu-_pt,mu+_eta,mu-_eta,mu+_phi,mu-_phi,jet1_pt,jet2_pt,jet1_eta,jet2_eta,jet1_phi,jet2_phi
training-labels = long

#neurons = 20,60,100,200
neurons = 60
#hidden-layers = 2,3,4,6,8,10
hidden-layers = 4
epochs = 100
batch-size = 32
model = custom_model
dropout-rate = 0.0
grid-search = neurons,hidden-layers,batch-size

discriminating-variable = long

activation = relu 
last_activation = sigmoid
#learning_rate = 1e-4
loss = binary_crossentropy
kernel_init = normal
optimizer = adam
metrics = binary_accuracy

[grid]
unfold = 1

[hardware]
#machine = (local/cluster)

[evaluation]
model-of-interest = current_model_epoch100

#output = /data_CMS/cms/marchegiani/DNN/

binning =\-1,1,0.04
type = binary
data-eval = /home/llr/cms/marchegiani/dataframes/DNN_zz_polarized/zz_mumuee_polarized_delphes19877_eval.h5
